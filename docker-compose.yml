version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: iac/Dockerfile
    image: martini_web
    command: /start
    environment:
      - FASTAPI_ENV
      - DATABASE_URL
      - CELERY_BROKER_URL
      - result_backend
      - WS_MESSAGE_QUEUE
      - OPENAI_API_KEY
      - PINECONE_API_KEY
      - PINECONE_API_ENV
      - EMBEDDINGS_DIMENSION_OPENAI
      - EMBEDDINGS_DEFAULT_METRIC
      - EMBEDDINGS_INDEX_NAME_LENGTH
    volumes:
      - .:/app
    ports:
      - 8010:8000
    depends_on:
      - redis
      - postgres
    links:
      - postgres:db

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgres/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "martini"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:6-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis_proxy:
    image: nginx:latest
    ports:
      - 127.0.0.1:32787:6379
    depends_on:
      - redis
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  celery_worker:
    build:
      context: .
      dockerfile: iac/Dockerfile
    image: martini_worker
    command: /start-celery-worker
    volumes:
      - .:/app
    depends_on:
      - redis_proxy
      - postgres
    links:
      - postgres:db
    environment:
      - CELERY_BROKER_URL
      - result_backend
      - DATABASE_URL
      - OPENAI_API_KEY
      - PINECONE_API_KEY
      - PINECONE_API_ENV
      - EMBEDDINGS_DIMENSION_OPENAI
      - EMBEDDINGS_DEFAULT_METRIC
      - EMBEDDINGS_INDEX_NAME_LENGTH

  celery_beat:
    build:
      context: .
      dockerfile: iac/Dockerfile
    image: martini_beat
    command: /start-celery-beat
    volumes:
      - .:/app
    depends_on:
      - redis_proxy
      - postgres
    links:
      - postgres:db
    environment:
      - CELERY_BROKER_URL
      - result_backend
      - DATABASE_URL

  celery_flower:
    build:
      context: .
      dockerfile: iac/Dockerfile
    image: martini_flower
    command: /start-celery-flower
    volumes:
      - .:/app
    ports:
      - 5557:5555
    depends_on:
      - redis_proxy
      - postgres
    links:
      - postgres:db
    environment:
      - CELERY_BROKER_URL
      - result_backend
      - DATABASE_URL

volumes:
  postgres_data:
